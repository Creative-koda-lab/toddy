name: Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  id-token: write  # Required for AWS OIDC authentication

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          # Alternatively, use access keys (less secure):
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to AWS with SST
        run: npx sst deploy --stage production
        env:
          CI: true

      - name: Get deployment URL
        id: deploy-url
        run: |
          URL=$(npx sst url --stage production)
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Comment deployment URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 Deployed to: ${{ steps.deploy-url.outputs.url }}'
            })

  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    environment: preview

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Deploy preview to AWS with SST
        run: npx sst deploy --stage preview-${{ github.event.pull_request.number }}
        env:
          CI: true

      - name: Get preview URL
        id: preview-url
        run: |
          URL=$(npx sst url --stage preview-${{ github.event.pull_request.number }})
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🔍 Preview deployed to: ${{ steps.preview-url.outputs.url }}'
            })
